.TH _printf 3 "October 24th 2020" "version 1.0" "_printf manpage"
.SH NAME
_printf - formatted output conversion
.SH SYNOPSIS
.B include header file holberton.h
.B int _printf(const char *format, ...);
.SH DESCRIPTION
.B _printf
Function _printf write output to stdout, taking arguments [%] or not.
.PP
.SH RETURN
Return the number of character printed without the last character null in the strings.
.SH OPTIONS
.TP
.B -c
Print a single character
.TP
.B -s
Print a string of characters
.TP
.B -d
Print a decimal (base 10) number
.TP
.B -i
Print an integer in base 10
.TP
.B -b
Print unsigned int converted to binary
.TP
.B -u
Print an unsigned decimal (base 10) number
.TP
.B -o
Print a number in octal (base 8)
.TP
.B -x
Print a number in hexidecimal (base 16)
.TP
.B -X
Print a number in hexidecimal UPPERCASE (base 16)
.TP
.B -S
Print a string with non printable characters
.TP
.B -p
Print adress in memory of variable in hexadecimal
.TP
.B -r
Print a reversed string
.TP
.B -R
Print a string in ROT13 format
.TP
.B -%
Print one %
.TP
.SH EXAMPLES
The following examples will show you how to use the function _printf()
.PP
.B _printf("%d", 12);
.B _printf("%c", 'a');
.B _printf("This is a test");
.SH AUTHOR
Thibaut Bernard && Ophelie Fourbet
.SH COPYRIGHT
.PP
Copyright (c) 2020 Thibaut Bernard && Ophelie Fourbet
